//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.Warehouse), "AntennaPorts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.AntennaPort), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaPorts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.AntennaPort), "AntennaProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.AntennaProduct), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_AntennaProducts_dbo_Products_ProductID", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.Product), "AntennaProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.AntennaProduct), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "AntennaProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.AntennaProduct), "FinishedProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.FinishedProduct), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.Warehouse), "FinishedProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.FinishedProduct), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "FinishedProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.FinishedProduct), "TransactionFinishedProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.TransactionFinishedProduct), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.Warehouse), "Manufacturers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(cd.Manufacturer), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "ProductTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.ProductType), "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.Product), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_TransactionProducts_dbo_Products_ProductID", "Products", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.Product), "TransactionProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.TransactionProduct), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.Transaction), "TransactionFinishedProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.TransactionFinishedProduct), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.Transaction), "TransactionProducts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.TransactionProduct), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_Transactions_dbo_Users_UserID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.User), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.Transaction), true)]
[assembly: EdmRelationshipAttribute("WMS.WMScontextModel", "FK_dbo_Users_dbo_Warehouses_WarehouseID", "Warehouses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cd.Warehouse), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cd.User), true)]

#endregion

namespace cd
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__MigrationHistory> C__MigrationHistory
        {
            get
            {
                if ((_C__MigrationHistory == null))
                {
                    _C__MigrationHistory = base.CreateObjectSet<C__MigrationHistory>("C__MigrationHistory");
                }
                return _C__MigrationHistory;
            }
        }
        private ObjectSet<C__MigrationHistory> _C__MigrationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AntennaPort> AntennaPorts
        {
            get
            {
                if ((_AntennaPorts == null))
                {
                    _AntennaPorts = base.CreateObjectSet<AntennaPort>("AntennaPorts");
                }
                return _AntennaPorts;
            }
        }
        private ObjectSet<AntennaPort> _AntennaPorts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AntennaProduct> AntennaProducts
        {
            get
            {
                if ((_AntennaProducts == null))
                {
                    _AntennaProducts = base.CreateObjectSet<AntennaProduct>("AntennaProducts");
                }
                return _AntennaProducts;
            }
        }
        private ObjectSet<AntennaProduct> _AntennaProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinishedProduct> FinishedProducts
        {
            get
            {
                if ((_FinishedProducts == null))
                {
                    _FinishedProducts = base.CreateObjectSet<FinishedProduct>("FinishedProducts");
                }
                return _FinishedProducts;
            }
        }
        private ObjectSet<FinishedProduct> _FinishedProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manufacturer> Manufacturers
        {
            get
            {
                if ((_Manufacturers == null))
                {
                    _Manufacturers = base.CreateObjectSet<Manufacturer>("Manufacturers");
                }
                return _Manufacturers;
            }
        }
        private ObjectSet<Manufacturer> _Manufacturers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductType> ProductTypes
        {
            get
            {
                if ((_ProductTypes == null))
                {
                    _ProductTypes = base.CreateObjectSet<ProductType>("ProductTypes");
                }
                return _ProductTypes;
            }
        }
        private ObjectSet<ProductType> _ProductTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionFinishedProduct> TransactionFinishedProducts
        {
            get
            {
                if ((_TransactionFinishedProducts == null))
                {
                    _TransactionFinishedProducts = base.CreateObjectSet<TransactionFinishedProduct>("TransactionFinishedProducts");
                }
                return _TransactionFinishedProducts;
            }
        }
        private ObjectSet<TransactionFinishedProduct> _TransactionFinishedProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionProduct> TransactionProducts
        {
            get
            {
                if ((_TransactionProducts == null))
                {
                    _TransactionProducts = base.CreateObjectSet<TransactionProduct>("TransactionProducts");
                }
                return _TransactionProducts;
            }
        }
        private ObjectSet<TransactionProduct> _TransactionProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Warehouse> Warehouses
        {
            get
            {
                if ((_Warehouses == null))
                {
                    _Warehouses = base.CreateObjectSet<Warehouse>("Warehouses");
                }
                return _Warehouses;
            }
        }
        private ObjectSet<Warehouse> _Warehouses;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__MigrationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__MigrationHistory(C__MigrationHistory c__MigrationHistory)
        {
            base.AddObject("C__MigrationHistory", c__MigrationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AntennaPorts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAntennaPorts(AntennaPort antennaPort)
        {
            base.AddObject("AntennaPorts", antennaPort);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AntennaProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAntennaProducts(AntennaProduct antennaProduct)
        {
            base.AddObject("AntennaProducts", antennaProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FinishedProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinishedProducts(FinishedProduct finishedProduct)
        {
            base.AddObject("FinishedProducts", finishedProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manufacturers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManufacturers(Manufacturer manufacturer)
        {
            base.AddObject("Manufacturers", manufacturer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTypes(ProductType productType)
        {
            base.AddObject("ProductTypes", productType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionFinishedProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionFinishedProducts(TransactionFinishedProduct transactionFinishedProduct)
        {
            base.AddObject("TransactionFinishedProducts", transactionFinishedProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionProducts(TransactionProduct transactionProduct)
        {
            base.AddObject("TransactionProducts", transactionProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Warehouses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouses(Warehouse warehouse)
        {
            base.AddObject("Warehouses", warehouse);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="AntennaPort")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AntennaPort : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AntennaPort object.
        /// </summary>
        /// <param name="antennaPortID">Initial value of the AntennaPortID property.</param>
        /// <param name="portNumber">Initial value of the PortNumber property.</param>
        /// <param name="purpose">Initial value of the Purpose property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="warehouseID">Initial value of the WarehouseID property.</param>
        public static AntennaPort CreateAntennaPort(global::System.Int32 antennaPortID, global::System.Int32 portNumber, global::System.Int32 purpose, global::System.DateTime dateCreated, global::System.Int32 warehouseID)
        {
            AntennaPort antennaPort = new AntennaPort();
            antennaPort.AntennaPortID = antennaPortID;
            antennaPort.PortNumber = portNumber;
            antennaPort.Purpose = purpose;
            antennaPort.DateCreated = dateCreated;
            antennaPort.WarehouseID = warehouseID;
            return antennaPort;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AntennaPortID
        {
            get
            {
                return _AntennaPortID;
            }
            set
            {
                if (_AntennaPortID != value)
                {
                    OnAntennaPortIDChanging(value);
                    ReportPropertyChanging("AntennaPortID");
                    _AntennaPortID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AntennaPortID");
                    OnAntennaPortIDChanged();
                }
            }
        }
        private global::System.Int32 _AntennaPortID;
        partial void OnAntennaPortIDChanging(global::System.Int32 value);
        partial void OnAntennaPortIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortNumber
        {
            get
            {
                return _PortNumber;
            }
            set
            {
                OnPortNumberChanging(value);
                ReportPropertyChanging("PortNumber");
                _PortNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortNumber");
                OnPortNumberChanged();
            }
        }
        private global::System.Int32 _PortNumber;
        partial void OnPortNumberChanging(global::System.Int32 value);
        partial void OnPortNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Purpose
        {
            get
            {
                return _Purpose;
            }
            set
            {
                OnPurposeChanging(value);
                ReportPropertyChanging("Purpose");
                _Purpose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Purpose");
                OnPurposeChanged();
            }
        }
        private global::System.Int32 _Purpose;
        partial void OnPurposeChanging(global::System.Int32 value);
        partial void OnPurposeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseID
        {
            get
            {
                return _WarehouseID;
            }
            set
            {
                OnWarehouseIDChanging(value);
                ReportPropertyChanging("WarehouseID");
                _WarehouseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseID");
                OnWarehouseIDChanged();
            }
        }
        private global::System.Int32 _WarehouseID;
        partial void OnWarehouseIDChanging(global::System.Int32 value);
        partial void OnWarehouseIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "Warehouses")]
        public Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "Warehouses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "Warehouses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "Warehouses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaProducts")]
        public EntityCollection<AntennaProduct> AntennaProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AntennaProduct>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AntennaProduct>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaProducts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="AntennaProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AntennaProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AntennaProduct object.
        /// </summary>
        /// <param name="antennaProductID">Initial value of the AntennaProductID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="antennaPortID">Initial value of the AntennaPortID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static AntennaProduct CreateAntennaProduct(global::System.Int32 antennaProductID, global::System.DateTime dateCreated, global::System.Int32 antennaPortID, global::System.Int32 productID)
        {
            AntennaProduct antennaProduct = new AntennaProduct();
            antennaProduct.AntennaProductID = antennaProductID;
            antennaProduct.DateCreated = dateCreated;
            antennaProduct.AntennaPortID = antennaPortID;
            antennaProduct.ProductID = productID;
            return antennaProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AntennaProductID
        {
            get
            {
                return _AntennaProductID;
            }
            set
            {
                if (_AntennaProductID != value)
                {
                    OnAntennaProductIDChanging(value);
                    ReportPropertyChanging("AntennaProductID");
                    _AntennaProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AntennaProductID");
                    OnAntennaProductIDChanged();
                }
            }
        }
        private global::System.Int32 _AntennaProductID;
        partial void OnAntennaProductIDChanging(global::System.Int32 value);
        partial void OnAntennaProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AntennaPortID
        {
            get
            {
                return _AntennaPortID;
            }
            set
            {
                OnAntennaPortIDChanging(value);
                ReportPropertyChanging("AntennaPortID");
                _AntennaPortID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AntennaPortID");
                OnAntennaPortIDChanged();
            }
        }
        private global::System.Int32 _AntennaPortID;
        partial void OnAntennaPortIDChanging(global::System.Int32 value);
        partial void OnAntennaPortIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaPorts")]
        public AntennaPort AntennaPort
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntennaPort>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaPorts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntennaPort>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaPorts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AntennaPort> AntennaPortReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntennaPort>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaPorts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AntennaPort>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_AntennaPorts_AntennaPortID", "AntennaPorts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_AntennaProducts_dbo_Products_ProductID", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_Products_ProductID", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_Products_ProductID", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_Products_ProductID", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_Products_ProductID", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "FinishedProducts")]
        public EntityCollection<FinishedProduct> FinishedProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinishedProduct>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "FinishedProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinishedProduct>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "FinishedProducts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="C__MigrationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__MigrationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__MigrationHistory object.
        /// </summary>
        /// <param name="migrationId">Initial value of the MigrationId property.</param>
        /// <param name="contextKey">Initial value of the ContextKey property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="productVersion">Initial value of the ProductVersion property.</param>
        public static C__MigrationHistory CreateC__MigrationHistory(global::System.String migrationId, global::System.String contextKey, global::System.Byte[] model, global::System.String productVersion)
        {
            C__MigrationHistory c__MigrationHistory = new C__MigrationHistory();
            c__MigrationHistory.MigrationId = migrationId;
            c__MigrationHistory.ContextKey = contextKey;
            c__MigrationHistory.Model = model;
            c__MigrationHistory.ProductVersion = productVersion;
            return c__MigrationHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MigrationId
        {
            get
            {
                return _MigrationId;
            }
            set
            {
                if (_MigrationId != value)
                {
                    OnMigrationIdChanging(value);
                    ReportPropertyChanging("MigrationId");
                    _MigrationId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MigrationId");
                    OnMigrationIdChanged();
                }
            }
        }
        private global::System.String _MigrationId;
        partial void OnMigrationIdChanging(global::System.String value);
        partial void OnMigrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContextKey
        {
            get
            {
                return _ContextKey;
            }
            set
            {
                if (_ContextKey != value)
                {
                    OnContextKeyChanging(value);
                    ReportPropertyChanging("ContextKey");
                    _ContextKey = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ContextKey");
                    OnContextKeyChanged();
                }
            }
        }
        private global::System.String _ContextKey;
        partial void OnContextKeyChanging(global::System.String value);
        partial void OnContextKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Model
        {
            get
            {
                return StructuralObject.GetValidValue(_Model);
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.Byte[] _Model;
        partial void OnModelChanging(global::System.Byte[] value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="FinishedProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinishedProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FinishedProduct object.
        /// </summary>
        /// <param name="finishedProductID">Initial value of the FinishedProductID property.</param>
        /// <param name="dateManufactured">Initial value of the DateManufactured property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="antennaProductID">Initial value of the AntennaProductID property.</param>
        /// <param name="warehouseID">Initial value of the WarehouseID property.</param>
        public static FinishedProduct CreateFinishedProduct(global::System.Int32 finishedProductID, global::System.DateTime dateManufactured, global::System.Int32 status, global::System.Int32 antennaProductID, global::System.Int32 warehouseID)
        {
            FinishedProduct finishedProduct = new FinishedProduct();
            finishedProduct.FinishedProductID = finishedProductID;
            finishedProduct.DateManufactured = dateManufactured;
            finishedProduct.Status = status;
            finishedProduct.AntennaProductID = antennaProductID;
            finishedProduct.WarehouseID = warehouseID;
            return finishedProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinishedProductID
        {
            get
            {
                return _FinishedProductID;
            }
            set
            {
                if (_FinishedProductID != value)
                {
                    OnFinishedProductIDChanging(value);
                    ReportPropertyChanging("FinishedProductID");
                    _FinishedProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinishedProductID");
                    OnFinishedProductIDChanged();
                }
            }
        }
        private global::System.Int32 _FinishedProductID;
        partial void OnFinishedProductIDChanging(global::System.Int32 value);
        partial void OnFinishedProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateManufactured
        {
            get
            {
                return _DateManufactured;
            }
            set
            {
                OnDateManufacturedChanging(value);
                ReportPropertyChanging("DateManufactured");
                _DateManufactured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateManufactured");
                OnDateManufacturedChanged();
            }
        }
        private global::System.DateTime _DateManufactured;
        partial void OnDateManufacturedChanging(global::System.DateTime value);
        partial void OnDateManufacturedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EPC
        {
            get
            {
                return _EPC;
            }
            set
            {
                OnEPCChanging(value);
                ReportPropertyChanging("EPC");
                _EPC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EPC");
                OnEPCChanged();
            }
        }
        private global::System.String _EPC;
        partial void OnEPCChanging(global::System.String value);
        partial void OnEPCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AntennaProductID
        {
            get
            {
                return _AntennaProductID;
            }
            set
            {
                OnAntennaProductIDChanging(value);
                ReportPropertyChanging("AntennaProductID");
                _AntennaProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AntennaProductID");
                OnAntennaProductIDChanged();
            }
        }
        private global::System.Int32 _AntennaProductID;
        partial void OnAntennaProductIDChanging(global::System.Int32 value);
        partial void OnAntennaProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseID
        {
            get
            {
                return _WarehouseID;
            }
            set
            {
                OnWarehouseIDChanging(value);
                ReportPropertyChanging("WarehouseID");
                _WarehouseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseID");
                OnWarehouseIDChanged();
            }
        }
        private global::System.Int32 _WarehouseID;
        partial void OnWarehouseIDChanging(global::System.Int32 value);
        partial void OnWarehouseIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "AntennaProducts")]
        public AntennaProduct AntennaProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntennaProduct>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "AntennaProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntennaProduct>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "AntennaProducts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AntennaProduct> AntennaProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AntennaProduct>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "AntennaProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AntennaProduct>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_AntennaProducts_AntennaProductID", "AntennaProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "Warehouses")]
        public Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "Warehouses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "Warehouses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "Warehouses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "TransactionFinishedProducts")]
        public EntityCollection<TransactionFinishedProduct> TransactionFinishedProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionFinishedProduct>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "TransactionFinishedProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionFinishedProduct>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "TransactionFinishedProducts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="Manufacturer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manufacturer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manufacturer object.
        /// </summary>
        /// <param name="warehouseID">Initial value of the WarehouseID property.</param>
        public static Manufacturer CreateManufacturer(global::System.Int32 warehouseID)
        {
            Manufacturer manufacturer = new Manufacturer();
            manufacturer.WarehouseID = warehouseID;
            return manufacturer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseID
        {
            get
            {
                return _WarehouseID;
            }
            set
            {
                if (_WarehouseID != value)
                {
                    OnWarehouseIDChanging(value);
                    ReportPropertyChanging("WarehouseID");
                    _WarehouseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarehouseID");
                    OnWarehouseIDChanged();
                }
            }
        }
        private global::System.Int32 _WarehouseID;
        partial void OnWarehouseIDChanging(global::System.Int32 value);
        partial void OnWarehouseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseName
        {
            get
            {
                return _WarehouseName;
            }
            set
            {
                OnWarehouseNameChanging(value);
                ReportPropertyChanging("WarehouseName");
                _WarehouseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseName");
                OnWarehouseNameChanged();
            }
        }
        private global::System.String _WarehouseName;
        partial void OnWarehouseNameChanging(global::System.String value);
        partial void OnWarehouseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseAddress
        {
            get
            {
                return _WarehouseAddress;
            }
            set
            {
                OnWarehouseAddressChanging(value);
                ReportPropertyChanging("WarehouseAddress");
                _WarehouseAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseAddress");
                OnWarehouseAddressChanged();
            }
        }
        private global::System.String _WarehouseAddress;
        partial void OnWarehouseAddressChanging(global::System.String value);
        partial void OnWarehouseAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Warehouses")]
        public Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Warehouses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Warehouses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Warehouses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        /// <param name="daysToExpire">Initial value of the DaysToExpire property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="productTypeID">Initial value of the ProductTypeID property.</param>
        public static Product CreateProduct(global::System.Int32 productID, global::System.Double weight, global::System.Int32 daysToExpire, global::System.Double unitPrice, global::System.DateTime dateCreated, global::System.Int32 productTypeID)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.Weight = weight;
            product.DaysToExpire = daysToExpire;
            product.UnitPrice = unitPrice;
            product.DateCreated = dateCreated;
            product.ProductTypeID = productTypeID;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Double _Weight;
        partial void OnWeightChanging(global::System.Double value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DaysToExpire
        {
            get
            {
                return _DaysToExpire;
            }
            set
            {
                OnDaysToExpireChanging(value);
                ReportPropertyChanging("DaysToExpire");
                _DaysToExpire = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysToExpire");
                OnDaysToExpireChanged();
            }
        }
        private global::System.Int32 _DaysToExpire;
        partial void OnDaysToExpireChanging(global::System.Int32 value);
        partial void OnDaysToExpireChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Double _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Double value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeID
        {
            get
            {
                return _ProductTypeID;
            }
            set
            {
                OnProductTypeIDChanging(value);
                ReportPropertyChanging("ProductTypeID");
                _ProductTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductTypeID");
                OnProductTypeIDChanged();
            }
        }
        private global::System.Int32 _ProductTypeID;
        partial void OnProductTypeIDChanging(global::System.Int32 value);
        partial void OnProductTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_AntennaProducts_dbo_Products_ProductID", "AntennaProducts")]
        public EntityCollection<AntennaProduct> AntennaProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AntennaProduct>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_Products_ProductID", "AntennaProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AntennaProduct>("WMS.WMScontextModel.FK_dbo_AntennaProducts_dbo_Products_ProductID", "AntennaProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "ProductTypes")]
        public ProductType ProductType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("WMS.WMScontextModel.FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "ProductTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("WMS.WMScontextModel.FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "ProductTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductType> ProductTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("WMS.WMScontextModel.FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "ProductTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductType>("WMS.WMScontextModel.FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "ProductTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_TransactionProducts_dbo_Products_ProductID", "TransactionProducts")]
        public EntityCollection<TransactionProduct> TransactionProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionProduct>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Products_ProductID", "TransactionProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionProduct>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Products_ProductID", "TransactionProducts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="ProductType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductType object.
        /// </summary>
        /// <param name="productTypeID">Initial value of the ProductTypeID property.</param>
        public static ProductType CreateProductType(global::System.Int32 productTypeID)
        {
            ProductType productType = new ProductType();
            productType.ProductTypeID = productTypeID;
            return productType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeID
        {
            get
            {
                return _ProductTypeID;
            }
            set
            {
                if (_ProductTypeID != value)
                {
                    OnProductTypeIDChanging(value);
                    ReportPropertyChanging("ProductTypeID");
                    _ProductTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductTypeID");
                    OnProductTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductTypeID;
        partial void OnProductTypeIDChanging(global::System.Int32 value);
        partial void OnProductTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductTypeName
        {
            get
            {
                return _ProductTypeName;
            }
            set
            {
                OnProductTypeNameChanging(value);
                ReportPropertyChanging("ProductTypeName");
                _ProductTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductTypeName");
                OnProductTypeNameChanged();
            }
        }
        private global::System.String _ProductTypeName;
        partial void OnProductTypeNameChanging(global::System.String value);
        partial void OnProductTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "Products")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("WMS.WMScontextModel.FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("WMS.WMScontextModel.FK_dbo_Products_dbo_ProductTypes_ProductTypeID", "Products", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="shippingDate">Initial value of the ShippingDate property.</param>
        /// <param name="dateIssued">Initial value of the DateIssued property.</param>
        /// <param name="lastUpdate">Initial value of the LastUpdate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Transaction CreateTransaction(global::System.Int32 transactionID, global::System.DateTime shippingDate, global::System.DateTime dateIssued, global::System.DateTime lastUpdate, global::System.Int32 userID)
        {
            Transaction transaction = new Transaction();
            transaction.TransactionID = transactionID;
            transaction.ShippingDate = shippingDate;
            transaction.DateIssued = dateIssued;
            transaction.LastUpdate = lastUpdate;
            transaction.UserID = userID;
            return transaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ShippingDate
        {
            get
            {
                return _ShippingDate;
            }
            set
            {
                OnShippingDateChanging(value);
                ReportPropertyChanging("ShippingDate");
                _ShippingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShippingDate");
                OnShippingDateChanged();
            }
        }
        private global::System.DateTime _ShippingDate;
        partial void OnShippingDateChanging(global::System.DateTime value);
        partial void OnShippingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateIssued
        {
            get
            {
                return _DateIssued;
            }
            set
            {
                OnDateIssuedChanging(value);
                ReportPropertyChanging("DateIssued");
                _DateIssued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateIssued");
                OnDateIssuedChanged();
            }
        }
        private global::System.DateTime _DateIssued;
        partial void OnDateIssuedChanging(global::System.DateTime value);
        partial void OnDateIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private global::System.DateTime _LastUpdate;
        partial void OnLastUpdateChanging(global::System.DateTime value);
        partial void OnLastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "TransactionFinishedProducts")]
        public EntityCollection<TransactionFinishedProduct> TransactionFinishedProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionFinishedProduct>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "TransactionFinishedProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionFinishedProduct>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "TransactionFinishedProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "TransactionProducts")]
        public EntityCollection<TransactionProduct> TransactionProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionProduct>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "TransactionProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionProduct>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "TransactionProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_Transactions_dbo_Users_UserID", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WMS.WMScontextModel.FK_dbo_Transactions_dbo_Users_UserID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WMS.WMScontextModel.FK_dbo_Transactions_dbo_Users_UserID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WMS.WMScontextModel.FK_dbo_Transactions_dbo_Users_UserID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WMS.WMScontextModel.FK_dbo_Transactions_dbo_Users_UserID", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="TransactionFinishedProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionFinishedProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionFinishedProduct object.
        /// </summary>
        /// <param name="transactionFinishedProductsID">Initial value of the TransactionFinishedProductsID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="finishedProductID">Initial value of the FinishedProductID property.</param>
        public static TransactionFinishedProduct CreateTransactionFinishedProduct(global::System.Int32 transactionFinishedProductsID, global::System.Int32 transactionID, global::System.Int32 finishedProductID)
        {
            TransactionFinishedProduct transactionFinishedProduct = new TransactionFinishedProduct();
            transactionFinishedProduct.TransactionFinishedProductsID = transactionFinishedProductsID;
            transactionFinishedProduct.TransactionID = transactionID;
            transactionFinishedProduct.FinishedProductID = finishedProductID;
            return transactionFinishedProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionFinishedProductsID
        {
            get
            {
                return _TransactionFinishedProductsID;
            }
            set
            {
                if (_TransactionFinishedProductsID != value)
                {
                    OnTransactionFinishedProductsIDChanging(value);
                    ReportPropertyChanging("TransactionFinishedProductsID");
                    _TransactionFinishedProductsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionFinishedProductsID");
                    OnTransactionFinishedProductsIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionFinishedProductsID;
        partial void OnTransactionFinishedProductsIDChanging(global::System.Int32 value);
        partial void OnTransactionFinishedProductsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinishedProductID
        {
            get
            {
                return _FinishedProductID;
            }
            set
            {
                OnFinishedProductIDChanging(value);
                ReportPropertyChanging("FinishedProductID");
                _FinishedProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishedProductID");
                OnFinishedProductIDChanged();
            }
        }
        private global::System.Int32 _FinishedProductID;
        partial void OnFinishedProductIDChanging(global::System.Int32 value);
        partial void OnFinishedProductIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "FinishedProducts")]
        public FinishedProduct FinishedProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinishedProduct>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "FinishedProducts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinishedProduct>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "FinishedProducts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinishedProduct> FinishedProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinishedProduct>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "FinishedProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinishedProduct>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_FinishedProducts_FinishedProductID", "FinishedProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "Transactions")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "Transactions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "Transactions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("WMS.WMScontextModel.FK_dbo_TransactionFinishedProducts_dbo_Transactions_TransactionID", "Transactions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="TransactionProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionProduct object.
        /// </summary>
        /// <param name="transactionProductsID">Initial value of the TransactionProductsID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static TransactionProduct CreateTransactionProduct(global::System.Int32 transactionProductsID, global::System.Int32 transactionID, global::System.Int32 productID, global::System.Int32 quantity)
        {
            TransactionProduct transactionProduct = new TransactionProduct();
            transactionProduct.TransactionProductsID = transactionProductsID;
            transactionProduct.TransactionID = transactionID;
            transactionProduct.ProductID = productID;
            transactionProduct.Quantity = quantity;
            return transactionProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionProductsID
        {
            get
            {
                return _TransactionProductsID;
            }
            set
            {
                if (_TransactionProductsID != value)
                {
                    OnTransactionProductsIDChanging(value);
                    ReportPropertyChanging("TransactionProductsID");
                    _TransactionProductsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionProductsID");
                    OnTransactionProductsIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionProductsID;
        partial void OnTransactionProductsIDChanging(global::System.Int32 value);
        partial void OnTransactionProductsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_TransactionProducts_dbo_Products_ProductID", "Products")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Products_ProductID", "Products").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Products_ProductID", "Products").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Products_ProductID", "Products");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Products_ProductID", "Products", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "Transactions")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "Transactions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "Transactions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("WMS.WMScontextModel.FK_dbo_TransactionProducts_dbo_Transactions_TransactionID", "Transactions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="accountType">Initial value of the AccountType property.</param>
        /// <param name="warehouseID">Initial value of the WarehouseID property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.Int32 accountType, global::System.Int32 warehouseID)
        {
            User user = new User();
            user.UserID = userID;
            user.AccountType = accountType;
            user.WarehouseID = warehouseID;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.Int32 _AccountType;
        partial void OnAccountTypeChanging(global::System.Int32 value);
        partial void OnAccountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseID
        {
            get
            {
                return _WarehouseID;
            }
            set
            {
                OnWarehouseIDChanging(value);
                ReportPropertyChanging("WarehouseID");
                _WarehouseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseID");
                OnWarehouseIDChanged();
            }
        }
        private global::System.Int32 _WarehouseID;
        partial void OnWarehouseIDChanging(global::System.Int32 value);
        partial void OnWarehouseIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_Transactions_dbo_Users_UserID", "Transactions")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("WMS.WMScontextModel.FK_dbo_Transactions_dbo_Users_UserID", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("WMS.WMScontextModel.FK_dbo_Transactions_dbo_Users_UserID", "Transactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_Users_dbo_Warehouses_WarehouseID", "Warehouses")]
        public Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_Users_dbo_Warehouses_WarehouseID", "Warehouses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_Users_dbo_Warehouses_WarehouseID", "Warehouses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_Users_dbo_Warehouses_WarehouseID", "Warehouses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("WMS.WMScontextModel.FK_dbo_Users_dbo_Warehouses_WarehouseID", "Warehouses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WMS.WMScontextModel", Name="Warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Warehouse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Warehouse object.
        /// </summary>
        /// <param name="warehouseID">Initial value of the WarehouseID property.</param>
        public static Warehouse CreateWarehouse(global::System.Int32 warehouseID)
        {
            Warehouse warehouse = new Warehouse();
            warehouse.WarehouseID = warehouseID;
            return warehouse;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseID
        {
            get
            {
                return _WarehouseID;
            }
            set
            {
                if (_WarehouseID != value)
                {
                    OnWarehouseIDChanging(value);
                    ReportPropertyChanging("WarehouseID");
                    _WarehouseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarehouseID");
                    OnWarehouseIDChanged();
                }
            }
        }
        private global::System.Int32 _WarehouseID;
        partial void OnWarehouseIDChanging(global::System.Int32 value);
        partial void OnWarehouseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseName
        {
            get
            {
                return _WarehouseName;
            }
            set
            {
                OnWarehouseNameChanging(value);
                ReportPropertyChanging("WarehouseName");
                _WarehouseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseName");
                OnWarehouseNameChanged();
            }
        }
        private global::System.String _WarehouseName;
        partial void OnWarehouseNameChanging(global::System.String value);
        partial void OnWarehouseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseAddress
        {
            get
            {
                return _WarehouseAddress;
            }
            set
            {
                OnWarehouseAddressChanging(value);
                ReportPropertyChanging("WarehouseAddress");
                _WarehouseAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseAddress");
                OnWarehouseAddressChanged();
            }
        }
        private global::System.String _WarehouseAddress;
        partial void OnWarehouseAddressChanging(global::System.String value);
        partial void OnWarehouseAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "AntennaPorts")]
        public EntityCollection<AntennaPort> AntennaPorts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AntennaPort>("WMS.WMScontextModel.FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "AntennaPorts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AntennaPort>("WMS.WMScontextModel.FK_dbo_AntennaPorts_dbo_Warehouses_WarehouseID", "AntennaPorts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "FinishedProducts")]
        public EntityCollection<FinishedProduct> FinishedProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinishedProduct>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "FinishedProducts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinishedProduct>("WMS.WMScontextModel.FK_dbo_FinishedProducts_dbo_Warehouses_WarehouseID", "FinishedProducts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Manufacturers")]
        public Manufacturer Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("WMS.WMScontextModel.FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Manufacturers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("WMS.WMScontextModel.FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Manufacturers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacturer> ManufacturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("WMS.WMScontextModel.FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Manufacturers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacturer>("WMS.WMScontextModel.FK_dbo_Manufacturers_dbo_Warehouses_WarehouseID", "Manufacturers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WMS.WMScontextModel", "FK_dbo_Users_dbo_Warehouses_WarehouseID", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("WMS.WMScontextModel.FK_dbo_Users_dbo_Warehouses_WarehouseID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("WMS.WMScontextModel.FK_dbo_Users_dbo_Warehouses_WarehouseID", "Users", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
